from pyrogram import filters
from pyrogram.types import CallbackQuery
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.constants import ParseMode
from telegram.ext import CallbackQueryHandler, ContextTypes
from telegram.helpers import escape_markdown

from Exon import BOT_NAME, BOT_USERNAME, OWNER_ID, SUPPORT_CHAT, app, application
from Exon.__main__ import buttons


@app.on_callback_query(filters.regex("close_"))
async def close(_, cb: CallbackQuery):
    await cb.answer()
    await cb.message.delete()


async def EXON_about_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query.data == "EXON_":
        await query.message.edit_caption(
            f"‡πè …™'·¥ç {BOT_NAME}, ·¥Ä ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ  ô·¥è·¥õ  ô·¥ú…™ ü·¥õ ·¥õ·¥è  ú·¥á ü·¥ò  è·¥è·¥ú ·¥ç·¥Ä…¥·¥Ä…¢·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥á·¥Äs…™ ü è."
            "\n‚Ä¢ I scan  Ä·¥ás·¥õ Ä…™·¥Ñ·¥õ ·¥ús·¥á Äs."
            "\n‚Ä¢ …™ ·¥Ñ·¥Ä…¥ …¢ Ä·¥á·¥á·¥õ ·¥ús·¥á Äs ·¥°…™sh ·¥Ñ·¥ús·¥õ·¥è·¥ç…™·¥¢·¥Ä ô ü·¥á ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥ç·¥áss·¥Ä…¢·¥ás ·¥Ä…¥·¥Ö ·¥á·¥†·¥á…¥ s·¥á·¥õ ·¥Ä …¢ Ä·¥è·¥ú·¥ò's  Ä·¥ú ü·¥ás."
            "\n‚Ä¢ …™  ú·¥Ä·¥†·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö ·¥Ä…¥·¥õ…™-“ì ü·¥è·¥è·¥Ö s ès·¥õ·¥á·¥ç."
            "\n‚Ä¢ …™ ·¥Ñ·¥Ä…¥ ·¥°·¥Ä Ä…¥ ·¥ús·¥á Äs ·¥ú…¥s…™ ü ·¥õ ú·¥á è  Ä·¥á·¥Ä·¥Ñ ú ·¥ç·¥Äx ·¥°·¥Ä Ä…¥x, ·¥°…™·¥õ ú ·¥á·¥Ä·¥Ñ ú ·¥ò Ä·¥á·¥Ö·¥á“ì…™…¥·¥á·¥Ö ·¥Ä·¥Ñ·¥õ…™·¥è…¥s s·¥ú·¥Ñ ú ·¥Äs  ô·¥Ä…¥, ·¥ç·¥ú·¥õ·¥á, ·¥ã…™·¥Ñ·¥ã, ·¥á·¥õ·¥Ñ."
            "\n‚Ä¢ …™  ú·¥Ä·¥†·¥á ·¥Ä …¥·¥è·¥õ·¥á ·¥ã·¥á·¥á·¥ò…™…¥…¢ s ès·¥õ·¥á·¥ç,  ô ü·¥Ä·¥Ñ·¥ã ü…™s·¥õs, ·¥Ä…¥·¥Ö ·¥á·¥†·¥á…¥ ·¥ò Ä·¥á·¥Ö·¥á·¥õ·¥á Ä·¥ç…™…¥·¥á·¥Ö  Ä·¥á·¥ò ü…™·¥ás ·¥è…¥ ·¥Ñ·¥á Ä·¥õ·¥Ä…™…¥ ·¥ã·¥á è·¥°·¥è Ä·¥Ös."
            "\n‚Ä¢ …™ ·¥Ñ ú·¥á·¥Ñ·¥ã “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥s  ô·¥á“ì·¥è Ä·¥á ·¥áx·¥á·¥Ñ·¥ú·¥õ…™…¥…¢ ·¥Ä…¥ è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ä…¥·¥Ö ·¥ç·¥è Ä·¥á s·¥õ·¥ú“ì“ìs"
            "\n\n_Ex·¥è…¥  ü…™·¥Ñ·¥á…¥s·¥á·¥Ö ·¥ú…¥·¥Ö·¥á Ä ·¥õ ú·¥á GNU …¢·¥á…¥·¥á Ä·¥Ä ü ·¥ò·¥ú ô ü…™·¥Ñ  ü…™·¥Ñ·¥á…¥s·¥á v3.0_"
            f"\n\n*·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥  ô·¥ú·¥õ·¥õ·¥è…¥  ô·¥á ü ü·¥è·¥° ·¥õ·¥è …¢·¥á·¥õ  ô·¥Äs…™·¥Ñ  ú·¥á ü·¥ò “ì·¥è Ä {BOT_NAME} *.",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(text="·¥Ä·¥Ö·¥ç…™…¥s", callback_data="EXON_ADMIN"),
                        InlineKeyboardButton(text="…¥·¥è·¥õ·¥ás", callback_data="EXON_notes"),
                    ],
                    [
                        InlineKeyboardButton(
                            text="s·¥ú·¥ò·¥ò·¥è Ä·¥õ", callback_data="EXON_SUPPORT"
                        ),
                        InlineKeyboardButton(
                            text="·¥Ñ Ä·¥á·¥Ö…™·¥õs", callback_data="EXON_CREDIT"
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="s·¥è·¥ú Ä·¥Ñ·¥á",
                            callback_data="EXON_SOURCE",
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="…¢·¥è  ô·¥Ä·¥Ñ·¥ã", callback_data="start_back"
                        ),
                    ],
                ]
            ),
        )

    elif query.data == "EXON_ADMIN":
        await query.message.edit_caption(
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ *·¥Ä·¥Ö·¥ç…™…¥s* ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(text="üè°", callback_data="start_back"),
                        InlineKeyboardButton(text="üõ°Ô∏è", callback_data="EXON_ADMIN"),
                        InlineKeyboardButton(text="üí≥", callback_data="EXON_CREDIT"),
                        InlineKeyboardButton(text="üïπÔ∏è", callback_data="EXON_SOURCE"),
                        InlineKeyboardButton(text="üñ•Ô∏è", url=f"http://t.me/{BOT_USERNAME}?start=help"),
                    ]
                ]
            ),
        )

    elif query.data == "EXON_notes":
        await query.message.edit_caption(
            f"<b>‡πè s·¥á·¥õ·¥õ…™…¥…¢ ·¥ú·¥ò …¥·¥è·¥õ·¥ás</b>"
            f"\n è·¥è·¥ú ·¥Ñ·¥Ä…¥ s·¥Ä·¥†·¥á ·¥ç·¥áss·¥Ä…¢·¥á/·¥ç·¥á·¥Ö…™·¥Ä/·¥Ä·¥ú·¥Ö…™·¥è ·¥è Ä ·¥Ä…¥ è·¥õ ú…™…¥…¢ ·¥Äs …¥·¥è·¥õ·¥ás"
            f"\n·¥õ·¥è …¢·¥á·¥õ ·¥Ä …¥·¥è·¥õ·¥á s…™·¥ç·¥ò ü è ·¥ús·¥á # ·¥Ä·¥õ ·¥õ ú·¥á  ô·¥á…¢…™…¥…¥…™…¥…¢ ·¥è“ì ·¥Ä ·¥°·¥è Ä·¥Ö"
            f"\n\n è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ä üs·¥è s·¥á·¥õ  ô·¥ú·¥õ·¥õ·¥è…¥s “ì·¥è Ä …¥·¥è·¥õ·¥ás ·¥Ä…¥·¥Ö “ì…™ ü·¥õ·¥á Äs ( Ä·¥á“ì·¥á Ä  ú·¥á ü·¥ò ·¥ç·¥á…¥·¥ú)",
            parse_mode=ParseMode.HTML,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton(text="…¢·¥è  ô·¥Ä·¥Ñ·¥ã", callback_data="EXON_")]]
            ),
        )
    elif query.data == "EXON_SUPPORT":
        await query.message.edit_caption(
            f"*‡πè ·¥áx·¥è…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õs*"
            f"\n·¥ä·¥è…™…¥ ·¥ç è s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò/·¥Ñ ú·¥Ä…¥…¥·¥á ü “ì·¥è Ä s·¥á·¥á ·¥è Ä  Ä·¥á·¥ò·¥è Ä·¥õ ·¥Ä ·¥ò Ä·¥è ô ü·¥á·¥ç ·¥è…¥ {BOT_NAME}",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(
                            text="s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"t.me/{SUPPORT_CHAT}"
                        ),
                        InlineKeyboardButton(
                            text="·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/Abishnoi_bots"
                        ),
                    ],
                    [
                        InlineKeyboardButton(text="…¢·¥è  ô·¥Ä·¥Ñ·¥ã", callback_data="EXON_"),
                    ],
                ]
            ),
        )

    elif query.data == "EXON_CREDIT":  # ·¥Ñ Ä·¥á·¥Ö…™·¥õ  i  ú·¥è·¥ò·¥á ·¥á·¥Ö…™·¥õ …¥·¥Ä…™  ú·¥è…¢·¥Ä
        await query.message.edit_caption(
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ *·¥Ñ Ä·¥á·¥Ö…™·¥õ* ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
            "\nüõ°Ô∏è *·¥Ñ Ä·¥á·¥Ö…™·¥õ Íú∞·¥è Ä ·¥áx·¥è…¥  Ä·¥è ô·¥è·¥õ* üõ°Ô∏è"
            "\n\n ú·¥á Ä·¥á …™Íú± ·¥õ ú·¥á ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä ·¥Ä…¥·¥Ö"
            f"\nÍú±·¥ò·¥è…¥Íú±·¥è Ä ·¥èÍú∞ [{BOT_NAME}](t.me/{BOT_USERNAME})"
            "\n\n ú·¥á Íú±·¥ò·¥á…¥·¥õ ·¥Ä  ü·¥è·¥õ ·¥èÍú∞ ·¥õ…™·¥ç·¥á Íú∞·¥è Ä"
            f"\n·¥ç·¥Ä·¥ã…™…¥…¢ [{BOT_NAME}](t.me/Abishnoi1M)"
            "\nÍú±·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ  ô·¥è·¥õ",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(text="üè°", callback_data="start_back"),
                        InlineKeyboardButton(text="üõ°Ô∏è", callback_data="EXON_ADMIN"),
                        InlineKeyboardButton(text="üí≥", callback_data="EXON_CREDIT"),
                        InlineKeyboardButton(text="‚öîÔ∏è", callback_data="EXON_SOURCE"),
                        InlineKeyboardButton(text="üñ•Ô∏è", url=f"http://t.me/{BOT_USERNAME}?start=help"),
                    ],
                    [
                        InlineKeyboardButton(
                            text="·¥Ä ô…™s ú…¥·¥è…™",
                            url="https://t.me/Abishnoi1M",  # ·¥Ñ Ä·¥á·¥Ö…™·¥õ ( …™  ú·¥è·¥ò·¥á …¥·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á )
                        ),
                        InlineKeyboardButton(
                            text="·¥Ñ ú·¥Ä·¥õ", url=f"https://t.me/{SUPPORT_CHAT}"
                        ),
                    ],
                ]
            ),
        )
    elif query.data == "EXON_SOURCE":
        await query.message.edit_caption(
            caption=f"""
* ú·¥á è,
 ·¥õ ú…™s …™s {BOT_NAME} ,
·¥Ä…¥ ·¥è·¥©·¥á…¥ s·¥è·¥ú Ä·¥Ñ·¥á ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥© ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ  ô·¥è·¥õ.*

·¥° Ä…™·¥õ·¥õ·¥á…¥ …™…¥ ·¥© è·¥õ ú·¥è…¥ ·¥°…™·¥õ ú ·¥õ ú·¥á  ú·¥á ü·¥© ·¥è“ì : [·¥õ·¥á ü·¥á·¥õ ú·¥è…¥](https://github.com/LonamiWebs/Telethon), 
[·¥© è Ä·¥è…¢ Ä·¥Ä·¥ç](https://github.com/pyrogram/pyrogram), 
[·¥© è·¥õ ú·¥è…¥-·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç- ô·¥è·¥õ](https://github.com/python-telegram-bot/python-telegram-bot), 
·¥Ä…¥·¥Ö ·¥ús…™…¥…¢ [s«´ ü·¥Ä ü·¥Ñ ú·¥á·¥ç è](https://www.sqlalchemy.org) ·¥Ä…¥·¥Ö [·¥ç·¥è…¥…¢·¥è](https://cloud.mongodb.com) ·¥Äs ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.

* ú·¥á Ä·¥á …™s ·¥ç è s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á :* [{BOT_NAME}](https://github.com/Abishnoi69/ExonRobot)


·¥áx·¥è…¥  Ä·¥è ô·¥è·¥õ …™s  ü…™·¥Ñ·¥á…¥s·¥á·¥Ö ·¥ú…¥·¥Ö·¥á Ä ·¥õ ú·¥á [·¥ç…™·¥õ  ü…™·¥Ñ·¥á…¥s·¥á](https://github.com/Abishnoi69/ExonRobot/blob/main/LICENSE).
¬© 2022 - 2023 [@·¥Ä ô…™s ú…¥·¥è…™·¥ç“ì](https://t.me/AbishnoiMF), ·¥Ä ü ü  Ä…™…¢ ú·¥õs  Ä·¥ás·¥á Ä·¥†·¥á·¥Ö.
""",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(text="üè°", callback_data="start_back"),
                        InlineKeyboardButton(text="üõ°Ô∏è", callback_data="EXON_ADMIN"),
                        InlineKeyboardButton(text="üí≥", callback_data="EXON_CREDIT"),
                        InlineKeyboardButton(text="üßë‚Äç", url=f"tg://user?id={OWNER_ID}"),
                        InlineKeyboardButton(text="üñ•Ô∏è", url=f"http://t.me/{BOT_USERNAME}?start=help"),
                    ],
                    [
                        InlineKeyboardButton(
                            text="Íú±·¥è·¥ú Ä·¥Ñ·¥á",
                            url="https://github.com/Abishnoi69/ExonRobot",
                        ),
                    ],
                ]
            ),
        )


async def EXON_back_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query.data == "start_back":
        first_name = update.effective_user.first_name
        await query.message.edit_caption(
            escape_markdown(
                f""" ú“Ω è ·¥õ ú·¥á Ä·¥á {first_name}.\
                \n…™'·¥ç  ú·¥á Ä·¥á ·¥õ·¥è  ú·¥á ü·¥ò  è·¥è·¥ú ·¥ç·¥Ä…¥·¥Ä…¢·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥òs!
                \n ú…™·¥õ /help ·¥õ·¥è “ì…™…¥·¥Ö ·¥è·¥ú·¥õ ·¥ç·¥è Ä·¥á ·¥Ä ô·¥è·¥ú·¥õ  ú·¥è·¥° ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á ·¥õ·¥è ·¥ç è “ì·¥ú ü ü ·¥ò·¥è·¥õ·¥á…¥·¥õ…™·¥Ä ü."""
            ),
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(buttons),
        )


about_callback_handler = CallbackQueryHandler(
    EXON_about_callback, pattern=r"EXON_", block=False
)
back_callback_handler = CallbackQueryHandler(
    EXON_back_callback, pattern="start_back", block=False
)

application.add_handler(about_callback_handler)
application.add_handler(back_callback_handler)
