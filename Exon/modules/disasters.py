import html
import json
import os
from typing import Optional

from telegram import Update
from telegram.constants import ParseMode
from telegram.error import TelegramError
from telegram.ext import CommandHandler, ContextTypes
from telegram.helpers import mention_html

from Exon import DEV_USERS, DRAGONS, OWNER_ID, SUPPORT_CHAT, application
from Exon.modules.helper_funcs.chat_status import check_admin, whitelist_plus
from Exon.modules.helper_funcs.extraction import extract_user
from Exon.modules.log_channel import gloggable

ELEVATED_USERS_FILE = os.path.join(os.getcwd(), "Exon/elevated_users.json")


def check_user_id(user_id: int, context: ContextTypes.DEFAULT_TYPE) -> Optional[str]:
    bot = context.bot
    if not user_id:
        reply = "·¥õ ú·¥Ä·¥õ...…™s ·¥Ä ·¥Ñ ú·¥Ä·¥õ!  ô·¥Ä·¥ã·¥Ä ·¥ã·¥Ä ·¥è·¥ç·¥Ä·¥á?"

    elif user_id == bot.id:
        reply = "·¥õ ú…™s ·¥Ö·¥è·¥ás …¥·¥è·¥õ ·¥°·¥è Ä·¥ã ·¥õ ú·¥Ä·¥õ ·¥°·¥Ä è."

    else:
        reply = None
    return reply


@gloggable
@check_admin(only_dev=True)
async def addsudo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    message = update.effective_message
    user = update.effective_user
    chat = update.effective_chat
    bot, args = context.bot, context.args
    user_id = await extract_user(message, context, args)
    user_member = await bot.getChat(user_id)

    reply = check_user_id(user_id, bot)
    if reply:
        await message.reply_text(reply)
        return ""

    with open(ELEVATED_USERS_FILE, "r") as infile:
        data = json.load(infile)

    if user_id in DRAGONS:
        await message.reply_text("·¥õ ú…™s ·¥ç·¥á·¥ç ô·¥á Ä …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä ·¥Ö Ä·¥Ä…¢·¥è…¥ ·¥Ö…™s·¥Äs·¥õ·¥á Ä")
        return ""

    data["sudos"].append(user_id)
    DRAGONS.append(user_id)

    with open(ELEVATED_USERS_FILE, "w") as outfile:
        json.dump(data, outfile, indent=4)

    await update.effective_message.reply_text(
         Ä·¥õ
        + "\ns·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è s·¥á·¥õ ·¥Ö…™s·¥Äs·¥õ·¥á Ä  ü·¥á·¥†·¥á ü ·¥è“ì {} ·¥õ·¥è ·¥Ö Ä·¥Ä…¢·¥è…¥!".format(
            user_member.first_name,
        ),
    )

    log_message = (
        f"#ùêíùêîùêÉùêé\n"
        f"<b>·¥Ä·¥Ö·¥ç…™…¥:</b> {mention_html(user.id, html.escape(user.first_name))}\n"
        f"<b>·¥ús·¥á Ä:</b> {mention_html(user_member.id, html.escape(user_member.first_name))}"
    )

    if chat.type != "private":
        log_message = f"<b>{html.escape(chat.title)}:</b>\n" + log_message

    return log_message


@gloggable
@check_admin(only_dev=True)
async def removesudo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    message = update.effective_message
    user = update.effective_user
    chat = update.effective_chat
    bot, args = context.bot, context.args
    user_id = await extract_user(message, context, args)
    user_member = await bot.getChat(user_id)

    reply = check_user_id(user_id, bot)
    if reply:
        await message.reply_text(reply)
        return ""

    with open(ELEVATED_USERS_FILE, "r") as infile:
        data = json.load(infile)

    if user_id in DRAGONS:
        await message.reply_text(" Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö  ú·¥Ä ·¥õ·¥è ·¥Ö·¥á·¥ç·¥è·¥õ·¥á ·¥õ ú…™s ·¥ús·¥á Ä ·¥õ·¥è ·¥Ñ…™·¥†…™ ü…™·¥Ä…¥")
        DRAGONS.remove(user_id)
        data["sudos"].remove(user_id)

        with open(ELEVATED_USERS_FILE, "w") as outfile:
            json.dump(data, outfile, indent=4)

        log_message = (
            f"#ùêîùêçùêíùêîùêÉùêé\n"
            f"<b>·¥Ä·¥Ö·¥ç…™…¥:</b> {mention_html(user.id, html.escape(user.first_name))}\n"
            f"<b>·¥ús·¥á Ä:</b> {mention_html(user_member.id, html.escape(user_member.first_name))}"
        )

        if chat.type != "private":
            log_message = "<b>{}:</b>\n".format(html.escape(chat.title)) + log_message

        return log_message

    else:
        await message.reply_text("·¥õ ú…™s ·¥ús·¥á Ä …™s …¥·¥è·¥õ ·¥Ä ·¥Ö Ä·¥Ä…¢·¥è…¥ ·¥Ö…™s·¥Äs·¥õ·¥á Ä!")
        return ""


@whitelist_plus
async def sudolist(update: Update, context: ContextTypes.DEFAULT_TYPE):
    bot = context.bot
    m = await update.effective_message.reply_text(
        "<code>…¢·¥Ä·¥õ ú·¥á Ä…™…¥…¢ …™…¥·¥õ·¥á ü..</code>",
        parse_mode=ParseMode.HTML,
    )
    true_sudo = list(set(DRAGONS) - set(DEV_USERS))
    reply = "<b>·¥ã…¥·¥è·¥°…¥ ·¥Ö Ä·¥Ä…¢·¥è…¥ ·¥Ö…™s·¥Äs·¥õ·¥á Äs üêâ:</b>\n"
    for each_user in true_sudo:
        user_id = int(each_user)
        try:
            user = await bot.get_chat(user_id)
            reply += f"‚Ä¢ {mention_html(user_id, html.escape(user.first_name))}\n"
        except TelegramError:
            pass
    await m.edit_text(reply, parse_mode=ParseMode.HTML)


@whitelist_plus
async def devlist(update: Update, context: ContextTypes.DEFAULT_TYPE):
    bot = context.bot
    m = await update.effective_message.reply_text(
        "<code>…¢·¥Ä·¥õ ú·¥á Ä…™…¥…¢ …™…¥·¥õ·¥á ü..</code>",
        parse_mode=ParseMode.HTML,
    )
    true_dev = list(set(DEV_USERS) - {OWNER_ID})
    reply = "<b>·¥õ·¥á·¥Ä·¥ç ·¥Ä ô…™s ú…¥·¥è…™ ·¥ç·¥á·¥ç ô·¥á Äs ‚ö°Ô∏è:</b>\n"
    for each_user in true_dev:
        user_id = int(each_user)
        try:
            user = await bot.get_chat(user_id)
            reply += f"‚Ä¢ {mention_html(user_id, html.escape(user.first_name))}\n"
        except TelegramError:
            pass
    await m.edit_text(reply, parse_mode=ParseMode.HTML)


__help__ = f"""
*‚ö†Ô∏è …¥·¥è·¥õ…™·¥Ñ·¥á:*
·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös  ü…™s·¥õ·¥á·¥Ö  ú·¥á Ä·¥á ·¥è…¥ ü è ·¥°·¥è Ä·¥ã “ì·¥è Ä ·¥ús·¥á Äs ·¥°…™·¥õ ú s·¥ò·¥á·¥Ñ…™·¥Ä ü ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥Ä…¥·¥Ö ·¥Ä Ä·¥á ·¥ç·¥Ä…™…¥ ü è ·¥ús·¥á·¥Ö “ì·¥è Ä ·¥õ Ä·¥è·¥ú ô ü·¥ás ú·¥è·¥è·¥õ…™…¥…¢, ·¥Ö·¥á ô·¥ú…¢…¢…™…¥…¢ ·¥ò·¥ú Ä·¥ò·¥ès·¥ás.
…¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s/…¢ Ä·¥è·¥ú·¥ò ·¥è·¥°…¥·¥á Äs ·¥Ö·¥è …¥·¥è·¥õ …¥·¥á·¥á·¥Ö ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös.

 ‚ïî * ü…™s·¥õ ·¥Ä ü ü s·¥ò·¥á·¥Ñ…™·¥Ä ü ·¥ús·¥á Äs:*
 ‚ï† /dragons*:*  ü…™s·¥õs ·¥Ä ü ü ·¥Ö Ä·¥Ä…¢·¥è…¥ ·¥Ö…™s·¥Äs·¥õ·¥á Äs
 ‚ï† /darlings*:*  ü…™s·¥õs ·¥Ä ü ü  ô ü·¥Ä·¥Ñ·¥ã  ô·¥ú ü üs ·¥ç·¥á·¥ç ô·¥á Äs
 ‚ï† /adddragon*:* ·¥Ä·¥Ö·¥Ös a user to Dragon
 ‚ïö ·¥Ä·¥Ö·¥Ö ·¥Ö·¥á·¥† ·¥Ö·¥è·¥ás…¥'·¥õ ·¥áx…™s·¥õ, ·¥Ö·¥á·¥†s s ú·¥è·¥ú ü·¥Ö ·¥ã…¥·¥è·¥°  ú·¥è·¥° ·¥õ·¥è ·¥Ä·¥Ö·¥Ö ·¥õ ú·¥á·¥çs·¥á ü·¥†·¥ás

 ‚ïî *·¥ò…™…¥…¢:*
 ‚ï† /ping*:* …¢·¥á·¥õs ·¥ò…™…¥…¢ ·¥õ…™·¥ç·¥á ·¥è“ì  ô·¥è·¥õ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç s·¥á Ä·¥†·¥á Ä
 ‚ïö /pingall*:* …¢·¥á·¥õs ·¥Ä ü ü  ü…™s·¥õ·¥á·¥Ö ·¥ò…™…¥…¢ ·¥õ…™·¥ç·¥ás

 ‚ïî * ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ: ( ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥è…¥ ü è)*
 ‚ï†  *…¥·¥è·¥õ·¥á:* ·¥õ ú…™s s·¥ú·¥ò·¥ò·¥è Ä·¥õs  ô·¥Äs…™·¥Ñ ·¥ç·¥Ä Ä·¥ã·¥Ö·¥è·¥°…¥
 ‚ï† /broadcastall*:*  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õs ·¥á·¥†·¥á Ä è·¥° ú·¥á Ä·¥á
 ‚ï† /broadcastusers*:*  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õs ·¥õ·¥è·¥è ·¥Ä ü ü ·¥ús·¥á Äs
 ‚ïö /broadcastgroups*:*  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õs ·¥õ·¥è·¥è ·¥Ä ü ü …¢ Ä·¥è·¥ú·¥òs

 ‚ïî *…¢ Ä·¥è·¥ú·¥òs …™…¥“ì·¥è:*
 ‚ï† /groups*:*  ü…™s·¥õ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥òs ·¥°…™·¥õ ú …¥·¥Ä·¥ç·¥á, …™·¥Ö, ·¥ç·¥á·¥ç ô·¥á Äs ·¥Ñ·¥è·¥ú…¥·¥õ ·¥Äs ·¥Ä ·¥õx·¥õ
 ‚ï† /leave <ID>*:*  ü·¥á·¥Ä·¥†·¥á ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò, …™·¥Ö ·¥ç·¥ús·¥õ  ú·¥Ä·¥†·¥á  ú è·¥ò ú·¥á…¥ (-)
 ‚ï† /stats*:* s ú·¥è·¥°s ·¥è·¥†·¥á Ä·¥Ä ü ü  ô·¥è·¥õ s·¥õ·¥Ä·¥õs
 ‚ï† /getchats*:* …¢·¥á·¥õs ·¥Ä  ü…™s·¥õ ·¥è“ì …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥ás ·¥õ ú·¥á ·¥ús·¥á Ä  ú·¥Äs  ô·¥á·¥á…¥ s·¥á·¥á…¥ …™…¥.  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥è…¥ ü è
 ‚ïö /ginfo ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/ ü…™…¥·¥ã/…™·¥Ö*:* ·¥ò·¥ú ü üs …™…¥“ì·¥è ·¥ò·¥Ä…¥·¥á ü “ì·¥è Ä ·¥á…¥·¥õ…™ Ä·¥á …¢ Ä·¥è·¥ú·¥ò

 ‚ïî *·¥Ä·¥Ñ·¥Ñ·¥áss ·¥Ñ·¥è…¥·¥õ Ä·¥è ü:*
 ‚ï† /ignore*:*  ô ü·¥Ä·¥Ñ·¥ã ü…™s·¥õs a user from
 ‚ï†  ·¥ús…™…¥…¢ ·¥õ ú·¥á  ô·¥è·¥õ ·¥á…¥·¥õ…™ Ä·¥á ü è
 ‚ï† /lockdown <off/on>*:* ·¥õ·¥è…¢…¢ ü·¥ás  ô·¥è·¥õ ·¥Ä·¥Ö·¥Ö…™…¥…¢ ·¥õ·¥è …¢ Ä·¥è·¥ú·¥òs
 ‚ï† /notice*:*  Ä·¥á·¥ç·¥è·¥†·¥ás ·¥ús·¥á Ä “ì Ä·¥è·¥ç  ô ü·¥Ä·¥Ñ·¥ã ü…™s·¥õ
 ‚ïö /ignoredlist*:*  ü…™s·¥õs …™…¢…¥·¥è Ä·¥á·¥Ö ·¥ús·¥á Äs

 ‚ïî *·¥ç·¥è·¥Ö·¥ú ü·¥á  ü·¥è·¥Ä·¥Ö…™…¥…¢:*
 ‚ï† /listmodules*:* ·¥ò Ä…™…¥·¥õs ·¥ç·¥è·¥Ö·¥ú ü·¥ás ·¥Ä…¥·¥Ö ·¥õ ú·¥á…™ Ä …¥·¥Ä·¥ç·¥ás
 ‚ï† /unload <name>*:* ·¥ú…¥ ü·¥è·¥Ä·¥Ös ·¥ç·¥è·¥Ö·¥ú ü·¥á ·¥Ö è…¥·¥Ä·¥ç…™·¥Ñ·¥Ä ü ü è
 ‚ïö /load <name>*:* Loads ·¥ç·¥è·¥Ö·¥ú ü·¥á

 ‚ïî *s·¥ò·¥á·¥á·¥Ö·¥õ·¥ás·¥õ:*
 ‚ïö /speedtest*:*  Ä·¥ú…¥s ·¥Ä s·¥ò·¥á·¥á·¥Ö·¥õ·¥ás·¥õ ·¥Ä…¥·¥Ö …¢…™·¥†·¥ás  è·¥è·¥ú 2 ·¥è·¥ò·¥õ…™·¥è…¥s ·¥õ·¥è ·¥Ñ ú·¥è·¥ès·¥á “ì Ä·¥è·¥ç, ·¥õ·¥áx·¥õ ·¥è Ä …™·¥ç·¥Ä…¢·¥á ·¥è·¥ú·¥õ·¥ò·¥ú·¥õ

 ‚ïî *…¢ ü·¥è ô·¥Ä ü  ô·¥Ä…¥s:*
 ‚ï† /gban ·¥ús·¥á Ä  Ä·¥á·¥Äs·¥è…¥*:* …¢ ü·¥è ô·¥Ä ü ü è  ô·¥Ä…¥s ·¥Ä ·¥ús·¥á Ä
 ‚ïö /ungban ·¥ús·¥á Ä  Ä·¥á·¥Äs·¥è…¥*:* ·¥ú…¥ ô·¥Ä…¥s ·¥õ ú·¥á ·¥ús·¥á Ä “ì Ä·¥è·¥ç ·¥õ ú·¥á …¢ ü·¥è ô·¥Ä ü  ô·¥Ä…¥s  ü…™s·¥õ

 ‚ïî *·¥ç·¥è·¥Ö·¥ú ü·¥á  ü·¥è·¥Ä·¥Ö…™…¥…¢:*
 ‚ï† /listmodules*:*  ü…™s·¥õs …¥·¥Ä·¥ç·¥ás ·¥è“ì ·¥Ä ü ü ·¥ç·¥è·¥Ö·¥ú ü·¥ás
 ‚ï† /load modulename*:*  ü·¥è·¥Ä·¥Ös ·¥õ ú·¥á s·¥Ä…™·¥Ö ·¥ç·¥è·¥Ö·¥ú ü·¥á ·¥õ·¥è
 ‚ï†   ·¥ç·¥á·¥ç·¥è Ä è ·¥°…™·¥õ ú·¥è·¥ú·¥õ  Ä·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢.
 ‚ï† /unload ·¥ç·¥è·¥Ö·¥ú ü·¥á…¥·¥Ä·¥ç·¥á*:*  ü·¥è·¥Ä·¥Ös ·¥õ ú·¥á s·¥Ä…™·¥Ö ·¥ç·¥è·¥Ö·¥ú ü·¥á “ì Ä·¥è·¥ç
 ‚ïö   ·¥ç·¥á·¥ç·¥è Ä è ·¥°…™·¥õ ú·¥è·¥ú·¥õ  Ä·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢ .·¥ç·¥á·¥ç·¥è Ä è & ·¥°…™·¥õ ú·¥è·¥ú·¥õ  Ä·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢ ·¥õ ú·¥á  ô·¥è·¥õ

 ‚ïî * Ä·¥á·¥ç·¥è·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:*
 ‚ï† /rban ·¥ús·¥á Ä …¢ Ä·¥è·¥ú·¥ò*:*  Ä·¥á·¥ç·¥è·¥õ·¥á  ô·¥Ä…¥
 ‚ï† /runban ·¥ús·¥á Ä …¢ Ä·¥è·¥ú·¥ò*:*  Ä·¥á·¥ç·¥è·¥õ·¥á ·¥ú…¥- ô·¥Ä…¥
 ‚ï† /rkick ·¥ús·¥á Ä …¢ Ä·¥è·¥ú·¥ò*:*  Ä·¥á·¥ç·¥è·¥õ·¥á ·¥ã…™·¥Ñ·¥ã
 ‚ï† /rmute user group*:*  Ä·¥á·¥ç·¥è·¥õ·¥á ·¥ç·¥ú·¥õ·¥á
 ‚ïö /runmute ·¥ús·¥á Ä …¢ Ä·¥è·¥ú·¥ò*:*  Ä·¥á·¥ç·¥è·¥õ·¥á ·¥ú…¥-·¥ç·¥ú·¥õ·¥á

 ‚ïî *·¥Ö·¥á ô·¥ú…¢…¢…™…¥…¢ ·¥Ä…¥·¥Ö s ú·¥á ü ü:*
 ‚ï† /debug <·¥è…¥/·¥è“ì“ì>*:*  ü·¥è…¢s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥õ·¥è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás.txt
 ‚ï† /logs*:*  Ä·¥ú…¥ ·¥õ ú…™s …™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò ·¥õ·¥è …¢·¥á·¥õ  ü·¥è…¢s …™…¥ ·¥ò·¥ç
 ‚ï† /eval*:* s·¥á ü“ì ·¥áx·¥ò ü·¥Ä…¥·¥Ä·¥õ·¥è Ä è
 ‚ï† /sh*:*  Ä·¥ú…¥s s ú·¥á ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö
 ‚ï† /shell*:*  Ä·¥ú…¥s s ú·¥á ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö
 ‚ï† /clearlocals*:* ·¥Äs ·¥õ ú·¥á …¥·¥Ä·¥ç·¥á …¢·¥è·¥ás
 ‚ï† /dbcleanup*:*  Ä·¥á·¥ç·¥è·¥†·¥ás ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö ·¥Ä·¥Ñ·¥Ñs ·¥Ä…¥·¥Ö …¢ Ä·¥è·¥ú·¥òs “ì Ä·¥è·¥ç ·¥Ö ô
 ‚ïö /py*:*  Ä·¥ú…¥s ·¥ò è·¥õ ú·¥è…¥ ·¥Ñ·¥è·¥Ö·¥á

 ‚ïî *…¢ ü·¥è ô·¥Ä ü  ô·¥Ä…¥s:*
 ‚ï† /gban <id> < Ä·¥á·¥Äs·¥è…¥>*:* …¢ ô·¥Ä…¥s ·¥õ ú·¥á ·¥ús·¥á Ä, ·¥°·¥è Ä·¥ãs  ô è  Ä·¥á·¥ò ü è ·¥õ·¥è·¥è
 ‚ï† /ungban*:* ·¥ú…¥…¢ ô·¥Ä…¥s ·¥õ ú·¥á ·¥ús·¥á Ä, s·¥Ä·¥ç·¥á ·¥ús·¥Ä…¢·¥á ·¥Äs …¢ ô·¥Ä…¥
 ‚ïö /gbanlist*:* ·¥è·¥ú·¥õ·¥ò·¥ú·¥õs ·¥Ä  ü…™s·¥õ ·¥è“ì …¢ ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs

·¥†…™s…™·¥õ @{SUPPORT_CHAT} “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥.
"""

SUDO_HANDLER = CommandHandler(("addsudo", "adddragon"), addsudo, block=False)
SUDOLIST_HANDLER = CommandHandler(["sudolist", "dragons"], sudolist, block=False)
DEVLIST_HANDLER = CommandHandler(["devlist", "darlings"], devlist, block=False)

application.add_handler(SUDO_HANDLER)
application.add_handler(SUDOLIST_HANDLER)
application.add_handler(DEVLIST_HANDLER)

__mod_name__ = "ùêÉ·¥á·¥†s"
__handlers__ = [
    SUDO_HANDLER,
    SUDOLIST_HANDLER,
    DEVLIST_HANDLER,
]
