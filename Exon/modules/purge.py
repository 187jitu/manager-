import time

from telethon import events
from telethon.errors.rpcerrorlist import MessageDeleteForbiddenError

from Exon import LOGGER, telethn
from Exon.modules.helper_funcs.telethn.chatstatus import (
    can_delete_messages,
    user_can_purge,
    user_is_admin,
)


async def purge_messages(event):
    start = time.perf_counter()
    if event.from_id is None:
        return

    if not await user_is_admin(
        user_id=event.sender_id, message=event
    ) and event.from_id not in [1087968824]:
        await event.reply("·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä Ä·¥á ·¥Ä ü ü·¥è·¥°·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö")
        return

    if not await user_can_purge(user_id=event.sender_id, message=event):
        await event.reply(" è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥õ ú·¥á ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás")
        return

    if not can_delete_messages(message=event):
        await event.reply("·¥Ñ·¥Ä…¥'·¥õ s·¥á·¥á·¥ç ·¥õ·¥è ·¥ò·¥ú Ä…¢·¥á ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á")
        return

    reply_msg = await event.get_reply_message()
    if not reply_msg:
        await event.reply(" Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥á ü·¥á·¥Ñ·¥õ ·¥° ú·¥á Ä·¥á ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ ·¥ò·¥ú Ä…¢…™…¥…¢ “ì Ä·¥è·¥ç.")
        return
    messages = []
    message_id = reply_msg.id
    delete_to = event.message.id

    messages.append(event.reply_to_msg_id)
    for msg_id in range(message_id, delete_to + 1):
        messages.append(msg_id)
        if len(messages) == 100:
            await event.client.delete_messages(event.chat_id, messages)
            messages = []

    try:
        await event.client.delete_messages(event.chat_id, messages)
    except:
        raise
    time_ = time.perf_counter() - start
    text = f"·¥ò·¥ú Ä…¢·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …™…¥ {time_:0.2f} s·¥á·¥Ñ·¥è…¥·¥Ö(s)"
    await event.respond(text, parse_mode="markdown")


async def delete_messages(event):
    if event.from_id is None:
        return

    if not await user_is_admin(
        user_id=event.sender_id, message=event
    ) and event.from_id not in [1087968824]:
        await event.reply("·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä Ä·¥á ·¥Ä ü ü·¥è·¥°·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö")
        return

    if not await user_can_purge(user_id=event.sender_id, message=event):
        await event.reply(" è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥õ ú·¥á ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á messages")
        return

    message = await event.get_reply_message()
    me = await telethn.get_me()
    BOT_ID = me.id

    if (
        not can_delete_messages(message=event)
        and message
        and not int(message.sender.id) == int(BOT_ID)
    ):
        if event.chat.admin_rights is None:
            return await event.reply(
                "I'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥, ·¥Ö·¥è  è·¥è·¥ú ·¥ç…™…¥·¥Ö ·¥ò Ä·¥è·¥ç·¥è·¥õ…™…¥…¢ ·¥ç·¥á “ì…™ Äs·¥õ?"
            )
        elif not event.chat.admin_rights.delete_messages:
            return await event.reply("I ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥õ ú·¥á ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás!")

    if not message:
        await event.reply("·¥° ú·¥Ä·¥õ ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á?")
        return
    chat = await event.get_input_chat()
    # del_message = [message, event.message]
    await event.client.delete_messages(chat, message)
    try:
        await event.client.delete_messages(chat, event.message)
    except MessageDeleteForbiddenError:
        LOGGER.error(
            "·¥á Ä Ä·¥è Ä …™…¥ ·¥Ö·¥á ü·¥á·¥õ…™…¥…¢ ·¥ç·¥áss·¥Ä…¢·¥á {} …™…¥ {}".format(event.message.id, event.chat.id)
        )


__help__ = """
*·¥Ä·¥Ö·¥ç…™…¥ ·¥è…¥ ü è:*
‚Ä¢ /del: ·¥Ö·¥á ü·¥á·¥õ·¥ás ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú  Ä·¥á·¥ò ü…™·¥á·¥Ö to
‚Ä¢ /purge: ·¥Ö·¥á ü·¥á·¥õ·¥ás ·¥Ä ü ü ·¥ç·¥áss·¥Ä…¢·¥ás  ô·¥á·¥õ·¥°·¥á·¥á…¥ ·¥õ ú…™s ·¥Ä…¥·¥Ö ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥õ·¥è ·¥ç·¥áss·¥Ä…¢·¥á.
‚Ä¢ /purge <…™…¥·¥õ·¥á…¢·¥á Ä x>: ·¥Ö·¥á ü·¥á·¥õ·¥ás ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á, ·¥Ä…¥·¥Ö X ·¥ç·¥áss·¥Ä…¢·¥ás “ì·¥è ü ü·¥è·¥°…™…¥…¢ …™·¥õ …™“ì  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á.
"""

PURGE_HANDLER = purge_messages, events.NewMessage(pattern="^[!/]purge$")
DEL_HANDLER = delete_messages, events.NewMessage(pattern="^[!/]del$")

telethn.add_event_handler(*PURGE_HANDLER)
telethn.add_event_handler(*DEL_HANDLER)

__mod_name__ = "ùêè·¥ú Ä…¢·¥á"

__command_list__ = ["del", "purge"]
__handlers__ = [PURGE_HANDLER, DEL_HANDLER]
